declare module '@qiwi/semantic-release-gh-pages-plugin' {
  /** */
  export * from '@qiwi/semantic-release-gh-pages-plugin/target/es6';
}
// Generated by dts-bundle v0.7.5
// Dependencies for this module:
//   ../../../../../../../../../../../Users/tillhainbach/GitHub/semantic-release-gh-pages-plugin/semantic-release

declare module '@qiwi/semantic-release-gh-pages-plugin/target/es6' {
    /** @module semantic-release-gh-pages-plugin */
    import { TContext } from '@qiwi/semantic-release-gh-pages-plugin/target/es6/interface';
    export * from '@qiwi/semantic-release-gh-pages-plugin/target/es6/defaults';
    export const verifyConditions: (pluginConfig: any, context: TContext) => Promise<void>;
    export const publish: (pluginConfig: any, context: TContext) => Promise<unknown>;
    const _default: {
        verifyConditions: (pluginConfig: any, context: TContext) => Promise<void>;
        publish: (pluginConfig: any, context: TContext) => Promise<unknown>;
    };
    export default _default;
}

declare module '@qiwi/semantic-release-gh-pages-plugin/target/es6/interface' {
    /** @module semantic-release-gh-pages-plugin */
    import { BranchSpec, Context } from 'semantic-release';
    export interface ILogger {
        log: (message: string, ...vars: any[]) => void;
        error: (message: string, ...vars: any[]) => void;
    }
    export type TAnyMap = {
        [key: string]: any;
    };
    export type TStringMap = {
        [key: string]: string;
    };
    export type TContext = Context & {
        env: TStringMap;
        branch?: Exclude<BranchSpec, string>;
        cwd: string;
        options: TAnyMap & {
            publish?: Array<any>;
            verifyConditions?: Array<any>;
        };
    };
    export interface IGhpagesPluginConfig {
        dir: string;
        src: string | string[];
        dst: string;
        ciBranch: string;
        docsBranch: string;
        pullTagsBranch?: string;
        msg: string;
        repo: string;
        token?: string;
        enterprise?: boolean;
        dotfiles?: boolean;
        add?: boolean;
    }
    export interface IPushOpts extends IGhpagesPluginConfig {
        message: string;
        logger: ILogger;
        env: TAnyMap;
        cwd: string;
    }
}

declare module '@qiwi/semantic-release-gh-pages-plugin/target/es6/defaults' {
    /** @module semantic-release-gh-pages-plugin */
    export const PLUGIN_PATH = "@qiwi/semantic-release-gh-pages-plugin";
    export const DEFAULT_BRANCH = "gh-pages";
    export const DEFAULT_SRC = "docs";
    export const DEFAULT_BASE_DIR = ".";
    export const DEFAULT_DST = ".";
    export const DEFAULT_MSG = "docs updated <%= nextRelease.gitTag %>";
    export const DEFAULT_ENTERPRISE = false;
    export const DEFAULT_PULL_TAGS_BRANCH = "master";
}

// Generated by dts-bundle v0.7.5
// Dependencies for this module:
//   ../../../../../../../../../../../Users/tillhainbach/GitHub/semantic-release-gh-pages-plugin/semantic-release

declare module '@qiwi/semantic-release-gh-pages-plugin/target/es5' {
    /** @module semantic-release-gh-pages-plugin */
    import { TContext } from '@qiwi/semantic-release-gh-pages-plugin/target/es5/interface';
    export * from '@qiwi/semantic-release-gh-pages-plugin/target/es5/defaults';
    export const verifyConditions: (pluginConfig: any, context: TContext) => Promise<void>;
    export const publish: (pluginConfig: any, context: TContext) => Promise<unknown>;
    const _default: {
        verifyConditions: (pluginConfig: any, context: TContext) => Promise<void>;
        publish: (pluginConfig: any, context: TContext) => Promise<unknown>;
    };
    export default _default;
}

declare module '@qiwi/semantic-release-gh-pages-plugin/target/es5/interface' {
    /** @module semantic-release-gh-pages-plugin */
    import { BranchSpec, Context } from 'semantic-release';
    export interface ILogger {
        log: (message: string, ...vars: any[]) => void;
        error: (message: string, ...vars: any[]) => void;
    }
    export type TAnyMap = {
        [key: string]: any;
    };
    export type TStringMap = {
        [key: string]: string;
    };
    export type TContext = Context & {
        env: TStringMap;
        branch?: Exclude<BranchSpec, string>;
        cwd: string;
        options: TAnyMap & {
            publish?: Array<any>;
            verifyConditions?: Array<any>;
        };
    };
    export interface IGhpagesPluginConfig {
        dir: string;
        src: string | string[];
        dst: string;
        ciBranch: string;
        docsBranch: string;
        pullTagsBranch?: string;
        msg: string;
        repo: string;
        token?: string;
        enterprise?: boolean;
        dotfiles?: boolean;
        add?: boolean;
    }
    export interface IPushOpts extends IGhpagesPluginConfig {
        message: string;
        logger: ILogger;
        env: TAnyMap;
        cwd: string;
    }
}

declare module '@qiwi/semantic-release-gh-pages-plugin/target/es5/defaults' {
    /** @module semantic-release-gh-pages-plugin */
    export const PLUGIN_PATH = "@qiwi/semantic-release-gh-pages-plugin";
    export const DEFAULT_BRANCH = "gh-pages";
    export const DEFAULT_SRC = "docs";
    export const DEFAULT_BASE_DIR = ".";
    export const DEFAULT_DST = ".";
    export const DEFAULT_MSG = "docs updated <%= nextRelease.gitTag %>";
    export const DEFAULT_ENTERPRISE = false;
    export const DEFAULT_PULL_TAGS_BRANCH = "master";
}

